@model IEnumerable<FormIOProject.Models.FormIO>

@{
    ViewData["Title"] = "Index";
    // Layout = "~/Views/Shared/_LoginPartial.cshtml";
}

@* <p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreatedBy)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ModifiedBy)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreatedUtc)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ModifiedUtc)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.VersionId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Latest)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FormFields)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedBy)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ModifiedBy)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedUtc)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ModifiedUtc)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.VersionId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Latest)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FormFields)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody> *
</table> *@
@* @{
    ViewData["Title"] = "Form.io Integration";
} *@ 

@using FormIOProject.Models
@* @model Formio.Models.Forms *@
@* @model Formio.Models.Forms *@
 
@{
    ViewData["Title"] = "Form Builder";
}
 
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap/dist/css/bootstrap.min.css">
<script src="https://cdn.form.io/js/formio.embed.js"></script>
 
 
<div class="container mt-5">
<h3 class="mb-4 text-primary">Design Your Form</h3>
 
    <form id="saveForm" method="post" action="/Form/Builder" class="mt-4">
 
        <div class="form-group mb-4">
<input type="text" id="title" name="Title" placeholder="Enter form title" class="form-control" />
</div>
 
        <div id="FormBuilder" class="border rounded bg-light p-3"></div>
 
        <input type="hidden" name="jsonSchema" id="jsonSchema" class="form-control" />
<button class="btn btn-success btn-lg" type="submit">
<i class="bi bi-save"></i> Save Form
</button>
</form>
</div>
 
<script>
    let currentSchema = {};

    // Initialize Form.io builder
    Formio.builder(document.getElementById('FormBuilder'), {}).then(function (builder) {
        builder.on('change', () => {
            currentSchema = builder.schema;
        });
    });

    // Handle form submit via AJAX
    $('#saveForm').on('submit', function (e) {
        e.preventDefault(); // Prevent default form submit

        const title = $('#title').val();
        const jsonSchema = JSON.stringify(currentSchema);

        // Optional: Validate title
        if (!title.trim()) {
            alert("Please enter a form title.");
            return;
        }

        $.ajax({
            url: '/Form/Builder',   // Your controller action URL
            type: 'POST',
            data: {
                Title: title,
                jsonSchema: jsonSchema
            },
            success: function (response) {
                alert("Form saved successfully!");
                // Optionally reset form or redirect
            },
            error: function (xhr, status, error) {
                alert("Failed to save form: " + error);
                console.error(xhr.responseText);
            }
        });
    });
</script>
